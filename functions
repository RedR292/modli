##Helper method to check if a mod being installed to modli is properly formatted
##Proper format is 1) only one folder at root and 2) that folder is named "Data"
##IF either of these conditions are not met, the mod is not properly formatted
validatemod(){
        modcontents=$(7z l "$MOD" | grep -A 1000 "^----" | grep -B 1000 "^----" | grep -v "^----" | awk '{print $6}')
        if [[ $(echo "$modcontents" | sed -n 1p) == "Data" ]]; then
                for path in $modcontents; do
                        if [[ $path != Data* ]]; then
                                #mod is invalid
				return 1
                        fi
                done
        fi
	#mod is valid
	return 0
}

##Lists all the mods in $GAMEPATH/Mods
listmods(){
	##If mod doesn't exist in game modli dir
	if [ ! -d $root/Games/"$GAME_NAME" ]; then
		echo "modli: $root/Games/$GAME_NAME was not found"
		return 1
	fi
	echo "$GAME_NAME mods:"
	for file in "$MODPATH"/*; do
		echo $(basename "$file")
	done
	return 0
}

##Updates the game's config file
##Each config file has a GAME_NAME, GAMEPATH, MODPATH, SCRIPTEXTENDER, and ENGINE manually created 
updatestatus(){
	echo GAME_NAME=\""$GAME_NAME\""\
GAMEPATH=\""$GAMEPATH\""\
MODPATH=\""$MODPATH\""\
SCRIPTEXTENDER=\""$SCRIPTEXTENDER\""\
ENGINE=\""$ENGINE\"" > "$root/Games/$GAME_NAME"/config
	return 0
}

##Checks if the passed mod is installed to stage file or prints game details
check() {
	# Print game details
	if [ -z $MOD ]; then
		echo "modli: $GAME_NAME details:\
ID = $GAME_ID"
		cat "$root/Games/$GAME_NAME"/config
		#number of mods
		#mod names
		return 0
	fi
	#Mod is installed
	if [ -d "$GAMEPATH/mods.stage/$mod" ]; then
		echo "modli: $GAMEPATH/mods.stage/$mod already exists"
		return 0
		## Include overwrite option?	
	#Mod is not installed to GAME but can be installed
	elif [ -f "$MODPATH/$MOD" ]; then
		echo "modli: $MOD is not installed to $GAME_NAME but can be by running the cmd 'modli -i \$GAME_ID $MOD"
		return 0
	fi	
	echo "modli: $root/Games/$GAME_NAME/Mods/$MOD was not found"
	return 1
}

##Installs mod to stage folder
installmod(){
	#No Script Extender
	if [ $SCRIPTEXTENDER = "none" ]; then
		echo "modli: WARNING: MUST INSTALL A SCRIPT EXTENDER BEFORE ANY MODS CAN BE INSTALLED."
		return 1
	#Already installed
        elif [ -d "$GAMEPATH/mods.stage/$mod" ]; then
                echo "modli: $GAMEPATH/mods.stage/$mod already exists"
		return 0
	#Mod not found
        elif [ ! -f "$MODPATH/$MOD" ]; then
        	echo "modli: $MODPATH/$MOD not found"
		return 1
	#Mod is being installed
	else
		7z x "$MODPATH/$MOD" -o"$GAMEPATH/mods.stage/$mod" -y &> /dev/null
		echo "modli: $MOD was installed to $GAME_NAME"
		return 0
        fi
}

##Removes the specified mod from the Data folder then the stage file
##WARNING: MAY NEED TO TRACK WHICH MODS ARE UNINSTALLED BEFORE UNLAUNCHED
uninstallmods(){
        if [ -d "$GAMEPATH/mods.stage/$mod" ]; then
		#Removes all the files and subfiles from $GAMEPATH/Data that exist in $MOD
		#The next line runs EVERY TIME this is called, which can add up. Check if stage file was launched before removing from Data
                find "$GAMEPATH/mods.stage/$mod/Data" -type f -exec rm -fr "$GAMEPATH/{}" \; $> /dev/null
                rm -dR "$GAMEPATH/mods.stage/$mod" #this line must be removed from this if block
                echo "modli: $MOD was successfully removed from $GAME_NAME."
                return 0
	else
		echo "modli: $GAMEPATH/mods.stage/$mod not found"
		return 1
	fi
}
##Installs a mod to the modli system
Install(){
	echo "modli: Installing $(basename "$MOD") to modli."
	echo "Rename the file and press enter"
	read mod
	if [[ $mod != *.7z ]]; then
		echo "modli: ERR: $mod is an invalid name. mods must end in .7z"
		return 1
	fi
	#Check if mod is already installed
	if [ -f "$MODPATH/$mod" ]; then
		echo "modli: $MODPATH/$mod already exists"
		return 0
	fi
#	7z x "$MOD" -o"$MODPATH/$mod" -y &> /dev/null
	#Check if $mod is improperly formatted
	validatemod
	if [[ $? -ne 0 ]]; then
		echo "modli: Mod contents are in an unexpected format and was not installed. See modli -h \$GAME_ID for formatting mods"
                return 1
	else
		cp "$MOD" "$MODPATH/$mod"
		echo "modli: $mod was installed to modli."
		return 0
	fi
}

##Removes a mod from modli
##Could break a lot of stuff if not done right.
Uninstall(){
	if [ ! -d "$MODPATH/$MOD" ]; then
		echo "modli: ERR: $MODPATH/$MOD was not found"
		return 1
	fi
	uninstallmods &> /dev/null
	rm -dR "$MODPATH/$MOD" &> /dev/null
	echo "modli: $MOD was uninstalled from modli"
	return 0
}
